<div class="row">    
    <div class="col-md-4 col-md-offset-4">
        <div class="task-container">
            <h4>Tasks</h4>
            <div id="unassigned" class="task-list">
            </div>
        </div>        
    </div>
</div>

<div class="row" id="user_pools">
    <div class="col-md-4 col-xs-12 col-md-push-4">
        <div class="task-container">
            <h4>User 1</h4>
            <div id="user1" class="task-list">
            </div>
            <div class="bottom-right">1</div>
        </div>
    </div>

    <div class="col-md-4 col-xs-12 col-md-pull-4">
        <div class="task-container">
            <h4>User 2</h4>
            <div id="user2" class="task-list">
            </div>
            <div class="bottom-right">2</div>
        </div>
    </div>

    <div class="col-md-4 col-xs-12">
        <div class="task-container">
            <h4>User 3</h4>
            <div id="user3" class="task-list">
            </div>
            <div class="bottom-right">3</div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        fetchTasks();
        showContent();
    })

    var fetchTasks = function () {
        $.get("api/Tasks").done(function (result) { sortTasks(result) });
    }

    var sortTasks = function (tasks) {
        $.each(tasks, function (i, item) {
            if (item.UserID === 1)
                generateButton($('#user1'), item);
            else if (item.UserID === 2)
                generateButton($('#user2'), item);
            else if (item.UserID === 3)
                generateButton($('#user3'), item);
            else
                generateButton($('#unassigned'), item);
        });
        enableDragAndDrop();
    }

    var generateButton = function (list, item) {
        list.append('<button class="btn btn-block" draggable="true" id="task' + item.ID + '">' + item.Name + '</button>');
    }

    var enableDragAndDrop = function () {
        $('.task-list').on('dragover', function (e) {
            e.preventDefault();
        });
        $('.task-list').on('drop', function (e) {
            e.preventDefault();
            var data = e.originalEvent.dataTransfer.getData('Text');
            this.appendChild(document.getElementById(data));
            saveChanges(data, this.id);
        });
        $('.task-list button').on('dragstart', function (e) {
            e.originalEvent.dataTransfer.setData('Text', e.target.id);
        });
    }

    var saveChanges = function (taskNo, userNo) {
        var taskID = taskNo.substring(4);
        var userID = (userNo === "unassigned") ? null : userNo.substring(4);

        $('.status').text('Saving changes...');
        $.post("api/Tasks", { TaskID: taskID, UserID: userID })
            .done(function (data) { $('.status').text('Synchronized'); })
            .fail(function (data) { $('.status').text('An error occurred'); });
    }

    var showContent = function () {
        $('.status').text('Synchronized');
        $('.body-content').show();
    }
    
</script>